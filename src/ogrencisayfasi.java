
import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.management.Query;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Numan
 */
public class ogrencisayfasi extends javax.swing.JFrame {

    /**
     * Creates new form ogrencisayfasi
     */
    public ogrencisayfasi() {
        initComponents();
        ilgialanilist.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        
        
        mesajta.setLineWrap(true); // Satır sonu otomatik kaydırma
        mesajta.setWrapStyleWord(true);
        
        try {
            
            
            listele();
            taleplistele();
            ilgialanidoldur();
            alinanderslerlistele();
            onaylananderslerlistele();
            gelentaleplistele();
            
            
            
            derskodtf.setVisible(false);
            dersadtf.setVisible(false);
            dersaktstf.setVisible(false);
            dersturtf.setVisible(false);
            
            derskodtf2.setVisible(false);
            dersadtf2.setVisible(false);
            dersaktstf2.setVisible(false);
            dersturtf2.setVisible(false);
            hocaadtf2.setVisible(false);
            hocasoyadtf2.setVisible(false);
            
            
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(ogrencisayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        donemcombo = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        alinanderslertbl = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        derssecimtbl = new javax.swing.JTable();
        hocacombo = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        ilgialanilist = new javax.swing.JList<>();
        filtrelebtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        derskodtf = new javax.swing.JLabel();
        dersadtf = new javax.swing.JLabel();
        dersturtf = new javax.swing.JLabel();
        eklebtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        taleptbl = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        mesajta = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        dersaktstf = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        derssilbtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        onaylananderslertbl = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        gelentaleptbl = new javax.swing.JTable();
        taleponaylabtn = new javax.swing.JButton();
        derskodtf2 = new javax.swing.JLabel();
        dersadtf2 = new javax.swing.JLabel();
        dersaktstf2 = new javax.swing.JLabel();
        dersturtf2 = new javax.swing.JLabel();
        hocaadtf2 = new javax.swing.JLabel();
        hocasoyadtf2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1324, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 670, Short.MAX_VALUE)
        );

        jTabbedPane5.addTab("TRANSKRİPT YÜKLEME", jPanel1);

        donemcombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1. DÖNEM", "2. DÖNEM", "3. DÖNEM", "4. DÖNEM", "5. DÖNEM", "6. DÖNEM", "7. DÖNEM", "8. DÖNEM" }));
        donemcombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donemcomboActionPerformed(evt);
            }
        });

        alinanderslertbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(alinanderslertbl);

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel4.setText("DÖNEM SEÇİNİZ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(donemcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel4)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1050, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(donemcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
        );

        jTabbedPane5.addTab("ALINAN DERSLER", jPanel2);

        derssecimtbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"fdsdf", "sdfsnfghdhfghfghfghfghgfhfghfghfghfghgfhfgfghghjıonıjonojınojınjıoojnınıojnjınjınjnjıonjınjnjınjınjınjınjınjınıj", "sdsdf", "sdfsdf"},
                {"sdf", "sdfsfsfs", "dfssvcxsdfvbxcbzxcv", "cxvsdfasf"},
                {"sdfs", "sdfsdfcvsvsdgd", "sdfsdfzxcvxzc", "sdfsdfvsdfsdfd"},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        derssecimtbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                derssecimtblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(derssecimtbl);

        hocacombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HOCA SEÇİN" }));

        ilgialanilist.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(ilgialanilist);

        filtrelebtn.setText("FİLTRELE");
        filtrelebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filtrelebtnMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel2.setText("İLGİ ALANI");

        derskodtf.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        derskodtf.setText("jLabel3");

        dersadtf.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        dersadtf.setText("jLabel3");

        dersturtf.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        dersturtf.setText("jLabel3");

        eklebtn.setText("EKLE");
        eklebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eklebtnMouseClicked(evt);
            }
        });

        taleptbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        taleptbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                taleptblMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(taleptbl);

        mesajta.setColumns(20);
        mesajta.setRows(5);
        jScrollPane4.setViewportView(mesajta);

        jButton1.setText("ONAYLA");

        dersaktstf.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        dersaktstf.setText("jLabel3");

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel1.setText("DERS KODU          DERS ADI                                                                                   AKTS                 TÜR");

        derssilbtn.setText("SEÇİLİ DERSİ SİL");
        derssilbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                derssilbtnMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel3.setText("MESAJ BIRAK");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(46, 46, 46)
                                        .addComponent(jLabel2))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(filtrelebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(derskodtf)
                                        .addGap(85, 85, 85)
                                        .addComponent(dersadtf)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(dersaktstf)
                                        .addGap(55, 55, 55)
                                        .addComponent(dersturtf)
                                        .addGap(32, 32, 32)))
                                .addComponent(hocacombo, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(eklebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(derssilbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                        .addContainerGap())
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1089, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(filtrelebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(hocacombo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(derskodtf)
                                    .addComponent(dersadtf)
                                    .addComponent(dersaktstf)
                                    .addComponent(dersturtf)))
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(eklebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(derssilbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(148, 148, 148))))
        );

        jTabbedPane5.addTab("DERS SEÇİMİ", jPanel4);

        onaylananderslertbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane10.setViewportView(onaylananderslertbl);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1324, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
        );

        jTabbedPane5.addTab("ONAYLANAN DERSLER", jPanel3);

        gelentaleptbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        gelentaleptbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gelentaleptblMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(gelentaleptbl);

        taleponaylabtn.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        taleponaylabtn.setText("ONAYLA");
        taleponaylabtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                taleponaylabtnMouseClicked(evt);
            }
        });

        derskodtf2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        derskodtf2.setText("jLabel5");

        dersadtf2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        dersadtf2.setText("jLabel6");

        dersaktstf2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        dersaktstf2.setText("jLabel7");

        dersturtf2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        dersturtf2.setText("jLabel5");

        hocaadtf2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        hocaadtf2.setText("jLabel8");

        hocasoyadtf2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        hocasoyadtf2.setText("jLabel9");

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel5.setText("DERS KODU                  DERS ADI                                                              AKTS        TÜR                HOCA ADI                      HOCA SOYADI");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(derskodtf2)
                        .addGap(104, 104, 104)
                        .addComponent(dersadtf2)
                        .addGap(128, 128, 128)
                        .addComponent(dersaktstf2)
                        .addGap(52, 52, 52)
                        .addComponent(dersturtf2)
                        .addGap(36, 36, 36)
                        .addComponent(hocaadtf2)
                        .addGap(127, 127, 127)
                        .addComponent(hocasoyadtf2))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(402, 402, 402)
                        .addComponent(taleponaylabtn, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(287, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(derskodtf2)
                    .addComponent(dersadtf2)
                    .addComponent(dersaktstf2)
                    .addComponent(dersturtf2)
                    .addComponent(hocaadtf2)
                    .addComponent(hocasoyadtf2))
                .addGap(64, 64, 64)
                .addComponent(taleponaylabtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 65, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("GELEN TALEPLER", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane5)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane5)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void derssilbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_derssilbtnMouseClicked

        try {
            int selectedRow = taleptbl.getSelectedRow();

            if (selectedRow==-1) {

                JOptionPane.showMessageDialog(this, "Silinecek Ders Seçin");
            }
            else{

                con = DriverManager.getConnection(url,user,pw);

                String derskod, hocaad, hocasoyad;

                derskod = (String) taleptbl.getValueAt(selectedRow, 2);
                hocaad = (String) taleptbl.getValueAt(selectedRow, 0);
                hocasoyad = (String) taleptbl.getValueAt(selectedRow, 1);
                String hocasicilno = "";
                st = con.createStatement();
                String query = "SELECT sicilno from hoca where ad ='" + hocaad +"' and soyad ='" + hocasoyad + "'";
                rs = st.executeQuery(query);
                while (rs.next()) {
                    hocasicilno = rs.getString("sicilno");
                }

                query= "delete from talepler where ogrencino = '"+ girissayfasi.ogrencino + "' and derskodu ='" + derskod +"' and hocasicilno ='" + hocasicilno +"'";
                st = con.createStatement();
                st.executeUpdate(query);
                JOptionPane.showMessageDialog(this, "Ders Silindi");
                con.close();

            }

            derskodtf.setText("");
            dersadtf.setText("");
            dersaktstf.setText("");
            dersturtf.setText("");
            mesajta.setText("");

            taleplistele();

        } catch (SQLException ex) {
            Logger.getLogger(ogrencisayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_derssilbtnMouseClicked

    private void taleptblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_taleptblMouseClicked

        derskodtf.setVisible(true);
        dersadtf.setVisible(true);
        dersaktstf.setVisible(true);
        dersturtf.setVisible(true);

        try {
            int selectedRow = taleptbl.getSelectedRow();

            String derskodt, dersadt, dersturt, dersaktst, mesajt;
            derskodt = (String) taleptbl.getValueAt(selectedRow, 2);
            dersadt = (String) taleptbl.getValueAt(selectedRow, 3);
            dersaktst = taleptbl.getValueAt(selectedRow, 4).toString();
            dersturt =  (String) taleptbl.getValueAt(selectedRow, 5);
            mesajt = (String) taleptbl.getValueAt(selectedRow, 6);

            if (selectedRow != -1) {
                derskodtf.setText(derskodt);
                dersadtf.setText(dersadt);
                dersaktstf.setText(dersaktst);
                dersturtf.setText(dersturt);
                mesajta.setText(mesajt);
            }
            con = DriverManager.getConnection(url,user,pw);
            st= con.createStatement();
            String sql = "SELECT h.ad, h.soyad, h.sicilno FROM hocaninverdigidersler v, hoca h where v.hocasicilno=h.sicilno and v.derskodu='"+ derskodt +"'";
            rs = st.executeQuery(sql);

            hocacombo.removeAllItems();

            /*hocacombo.addItem("HOCA SEÇİN");
            while (rs.next()) {
                //sicilno = rs.getString("sicilno");
                String isim = rs.getString("ad") + " " + rs.getString("soyad");
                hocacombo.addItem(isim);
            }*/

            String hocaad="";
            sql = "SELECT distinct(h.ad), h.soyad FROM hoca h, talepler t, ogrenci o, hocaninverdigidersler v, dersler d where v.hocasicilno = h.sicilno and d.derskodu = v.derskodu and h.sicilno = t.hocasicilno  and o.no = t.ogrencino and t.yon = false and d.derskodu= '"+ derskodt +"'";
            rs = st.executeQuery(sql);
            while (rs.next()) {
                hocaad = rs.getString("ad") + " " + rs.getString("soyad");
            }

            hocacombo.addItem(hocaad);

            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(ogrencisayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_taleptblMouseClicked

    private void eklebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eklebtnMouseClicked

        if (hocacombo.getSelectedItem().equals("HOCA SEÇİNİZ")) {
            JOptionPane.showMessageDialog(this, "HOCA SEÇİN!");
        }

        else{
            try {
                con = DriverManager.getConnection(url,user,pw);

                String hocatamad = (String) hocacombo.getSelectedItem();

                String[] hocatamaddizi = hocatamad.split(" ");
                String hocaad = hocatamaddizi[0];
                String hocasoyad = hocatamaddizi[1];

                String hocasicilno = "";
                st= con.createStatement();
                String sql = "select sicilno from hoca where ad ='" + hocaad +"' and soyad ='" + hocasoyad +"'";
                rs = st.executeQuery(sql);
                while (rs.next()) {
                    hocasicilno = rs.getString("sicilno");
                }

                int sayac = 0;
                st= con.createStatement();
                sql = "select COUNT(ogrencino) from talepler where ogrencino  = '" + girissayfasi.ogrencino + "' and hocasicilno = '"+ hocasicilno + "' and derskodu = '" + derskodtf.getText() + "'";

                rs = st.executeQuery(sql);
                while (rs.next()) {
                    sayac = rs.getInt("COUNT");
                }

                if (sayac==0) {
                    st= con.createStatement();
                    sql = "INSERT INTO talepler (ogrencino, hocasicilno, derskodu, yon, mesaj) VALUES (?, ?, ?, ?, ?)";
                    PreparedStatement preparedStatement = con.prepareStatement(sql);

                    preparedStatement.setString(1, girissayfasi.ogrencino);
                    preparedStatement.setString(2, hocasicilno);
                    preparedStatement.setString(3, derskodtf.getText());
                    preparedStatement.setBoolean(4, false);

                    if (mesajta.getText().equals("")) {
                        preparedStatement.setString(5, null);
                    }
                    else if(!mesajta.getText().equals("")) {
                        preparedStatement.setString(5, mesajta.getText());
                    }
                    preparedStatement.executeUpdate();
                }
                else {
                    JOptionPane.showMessageDialog(this, "Ders zaten önceden eklenmiş!");
                }

                taleplistele();

                con.close();

            } catch (SQLException e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_eklebtnMouseClicked

    private void filtrelebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filtrelebtnMouseClicked

        try {
            int[] indices = ilgialanilist.getSelectedIndices();

            if (indices.length==0) {
                listele();
            }
            else{
                String[] alanlar = new String[indices.length];
                for (int i = 0; i < indices.length; i++) {
                    alanlar[i] = ilgialanilist.getModel().getElementAt(indices[i]);
                }
                int sefer = 0;

                con = DriverManager.getConnection(url,user,pw);
                st= con.createStatement();
                String sql = "SELECT distinct(d.derskodu), d.dersad, d.akts, d.tur FROM dersler d, acilandersler a, alanlar al, ilgialanlari ia where a.derskodu = d.derskodu and al.alanid = ia.ilgialaniid and ia.derskodu = d.derskodu ";
                String orsql = "";
                sql = sql + filtrelerecursive(indices.length, orsql, alanlar, sefer);
                sql = sql + orsql + ")";
                ResultSet resultSet = st.executeQuery(sql);

                DefaultTableModel tableModel = new DefaultTableModel();
                derssecimtbl.setModel(tableModel);

                for (int i = 1; i <= resultSet.getMetaData().getColumnCount(); i++) {
                    tableModel.addColumn(resultSet.getMetaData().getColumnName(i));
                    derssecimtbl.setRowHeight(0,50);
                }
                while (resultSet.next()) {
                    Object[] row = new Object[resultSet.getMetaData().getColumnCount()];
                    for (int i = 1; i <= resultSet.getMetaData().getColumnCount(); i++) {
                        row[i - 1] = resultSet.getObject(i);
                    }
                    tableModel.addRow(row);

                }

                for (int i = 0; i <= 500; i++) {
                    derssecimtbl.setRowHeight(i,50);
                }

                derssecimtbl.getColumnModel().getColumn(0).setPreferredWidth(50);
                derssecimtbl.getColumnModel().getColumn(1).setPreferredWidth(700);
                derssecimtbl.getColumnModel().getColumn(2).setPreferredWidth(50);
                derssecimtbl.getColumnModel().getColumn(3).setPreferredWidth(50);

                Font customFont = new Font("Arial", Font.BOLD, 14);
                derssecimtbl.setFont(customFont);

                con.close();

            }

        } catch (SQLException ex) {
            Logger.getLogger(ogrencisayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_filtrelebtnMouseClicked

    private void derssecimtblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_derssecimtblMouseClicked

        derskodtf.setVisible(true);
        dersadtf.setVisible(true);
        dersaktstf.setVisible(true);
        dersturtf.setVisible(true);

        try {
            int selectedRow = derssecimtbl.getSelectedRow();

            String derskod, dersad, derstur, dersakts;
            derskod = (String) derssecimtbl.getValueAt(selectedRow, 0);
            dersad = (String) derssecimtbl.getValueAt(selectedRow, 1);
            dersakts =  derssecimtbl.getValueAt(selectedRow, 2).toString();
            derstur = (String) derssecimtbl.getValueAt(selectedRow, 3);

            if (selectedRow != -1) {
                derskodtf.setText(derskod);
                dersadtf.setText(dersad);
                dersaktstf.setText(dersakts);
                dersturtf.setText(derstur);
            }
            con = DriverManager.getConnection(url,user,pw);
            st= con.createStatement();
            String sql = "SELECT h.ad, h.soyad, h.sicilno FROM hocaninverdigidersler v, hoca h where v.hocasicilno=h.sicilno and v.derskodu='"+ derskod +"'";
            rs = st.executeQuery(sql);

            hocacombo.removeAllItems();

            hocacombo.addItem("HOCA SEÇİN");
            while (rs.next()) {
                String isim = rs.getString("ad") + " " + rs.getString("soyad");
                hocacombo.addItem(isim);
            }

            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(ogrencisayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_derssecimtblMouseClicked

    private void donemcomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donemcomboActionPerformed

        try {
            alinanderslerlistele();
        } catch (SQLException ex) {
            Logger.getLogger(ogrencisayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_donemcomboActionPerformed

    private void taleponaylabtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_taleponaylabtnMouseClicked
        
        
        if (derskodtf.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Onaylanacak Talep Seçin");
        }
        else{
             int input = JOptionPane.showConfirmDialog(null, "Onaylamak İstediğinize Emin misiniz?");
            // 0=yes, 1=no, 2=cancel

            if (input==0) {
                 try {
                    //con = DriverManager.getConnection(url);
                    con = DriverManager.getConnection(url,user,pw);
                    
                    
                    String hocaad = hocaadtf2.getText();
                    String hocasoyad = hocasoyadtf2.getText();

                    String hocasicilno = "";
                    st= con.createStatement();
                    String sql = "select sicilno from hoca where ad ='" + hocaad +"' and soyad ='" + hocasoyad +"'";
                    rs = st.executeQuery(sql);
                    while (rs.next()) {
                        hocasicilno = rs.getString("sicilno");
                    }
                    
                    
                    
                    
                    st= con.createStatement();
                    String query = "INSERT INTO onaylanandersler (ogrencino, derskodu, hocasicilno) VALUES (?, ?, ?)";
                    PreparedStatement preparedStatement = con.prepareStatement(query);

                    preparedStatement.setString(1, giris.ogrencino);
                    preparedStatement.setString(2, derskodtf2.getText());
                    preparedStatement.setString(3, hocasicilno);
                    preparedStatement.executeUpdate();
                    
                    
                    
                    query= "delete from talepler where ogrencino='" + giris.ogrencino + "' and hocasicilno='" + hocasicilno + "' and derskodu='" + derskodtf2.getText() + "'";
                    st = con.createStatement();
                    st.executeUpdate(query);
                    
                    
                    
                    JOptionPane.showMessageDialog(this, "Talep Onaylandı");
                    taleplistele();
                    gelentaleplistele();
                    
                    con.close();
                    
                    
                } catch (SQLException ex) {
                    Logger.getLogger(hocasayfasi.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
        
        
        derskodtf2.setText("");
        dersadtf2.setText("");
        dersaktstf2.setText("");
        dersturtf2.setText("");
        hocaadtf2.setText("");
        hocasoyadtf2.setText("");
        
        
    }//GEN-LAST:event_taleponaylabtnMouseClicked

    private void gelentaleptblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gelentaleptblMouseClicked
        
        derskodtf2.setVisible(true);
        dersadtf2.setVisible(true);
        dersaktstf2.setVisible(true);
        dersturtf2.setVisible(true);
        hocaadtf2.setVisible(true);
        hocasoyadtf2.setVisible(true);

            int selectedRow = gelentaleptbl.getSelectedRow();

            String hocaad, hocasoyad, derskod, dersad, dersakts, derstur;
            derskod = (String) gelentaleptbl.getValueAt(selectedRow, 0);
            dersad = (String) gelentaleptbl.getValueAt(selectedRow, 1);
            dersakts = gelentaleptbl.getValueAt(selectedRow, 2).toString();
            derstur = (String) gelentaleptbl.getValueAt(selectedRow, 3);
            hocaad = (String) gelentaleptbl.getValueAt(selectedRow, 4);
            hocasoyad = (String) gelentaleptbl.getValueAt(selectedRow, 5);
            
            /*derskod = (String) taleptbl.getValueAt(selectedRow, 3);
            dersad = (String) taleptbl.getValueAt(selectedRow, 4);
            dersakts =  taleptbl.getValueAt(selectedRow, 5).toString();
            derstur = (String) taleptbl.getValueAt(selectedRow, 6);
            mesaj = (String) taleptbl.getValueAt(selectedRow, 7);*/

            if (selectedRow != -1) {
                derskodtf2.setText(derskod);
                dersadtf2.setText(dersad);
                dersaktstf2.setText(dersakts);
                dersturtf2.setText(derstur);
                hocaadtf2.setText(hocaad);
                hocasoyadtf2.setText(hocasoyad);
                
                
                
            }
        
        
        
        
    }//GEN-LAST:event_gelentaleptblMouseClicked

    
    Connection con = null;
    Statement st = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    String url = "jdbc:postgresql://localhost:5432/derssecim";
    String user ="postgres";
    String pw = "1234";
    
    giris girissayfasi = new giris();
    
    
    
    public void ilgialanidoldur() throws SQLException{
        
        DefaultListModel<String> listModel = new DefaultListModel<>();
        
        con = DriverManager.getConnection(url,user,pw);
        st = con.createStatement();
        String sqlQuery = "SELECT alanad FROM alanlar";
        rs = st.executeQuery(sqlQuery);

        while (rs.next()) {
            listModel.addElement(rs.getString("alanad"));
        }
        
        ilgialanilist.setModel(listModel);
        
        con.close();
        
    }
    
    public void listele() throws SQLException {
    
        con = DriverManager.getConnection(url,user,pw);
        st= con.createStatement();
        String sql = "SELECT d.derskodu, d.dersad, d.akts, d.tur FROM dersler d, acilandersler a where a.derskodu = d.derskodu";
        ResultSet resultSet = st.executeQuery(sql);

        DefaultTableModel tableModel = new DefaultTableModel();
        derssecimtbl.setModel(tableModel);
        
        for (int i = 1; i <= resultSet.getMetaData().getColumnCount(); i++) {
            tableModel.addColumn(resultSet.getMetaData().getColumnName(i));
            derssecimtbl.setRowHeight(0,50);
        }
        while (resultSet.next()) {
            Object[] row = new Object[resultSet.getMetaData().getColumnCount()];
            for (int i = 1; i <= resultSet.getMetaData().getColumnCount(); i++) {
                row[i - 1] = resultSet.getObject(i);
            }
            tableModel.addRow(row);
            
        }
        
        for (int i = 0; i <= 500; i++) {
            derssecimtbl.setRowHeight(i,50);
        }
        
        
        derssecimtbl.getColumnModel().getColumn(0).setPreferredWidth(50);
        derssecimtbl.getColumnModel().getColumn(1).setPreferredWidth(700);
        derssecimtbl.getColumnModel().getColumn(2).setPreferredWidth(50);
        derssecimtbl.getColumnModel().getColumn(3).setPreferredWidth(50);

        
        
        
        Font customFont = new Font("Arial", Font.BOLD, 14);
        derssecimtbl.setFont(customFont);
        
        con.close();
        
    }
    
    
    public void taleplistele() throws SQLException {
    
        con = DriverManager.getConnection(url,user,pw);
        st= con.createStatement();
        String sql = "select distinct(h.ad), h.soyad, d.derskodu, d.dersad, d.akts, d.tur, t.mesaj from hoca h, dersler d, talepler t, ogrenci o where h.sicilno = t.hocasicilno and d.derskodu = t.derskodu and t.ogrencino = '" + girissayfasi.ogrencino + "'";
        ResultSet resultSet = st.executeQuery(sql);

        DefaultTableModel tableModel = new DefaultTableModel();
        taleptbl.setModel(tableModel);
        
        for (int i = 1; i <= resultSet.getMetaData().getColumnCount(); i++) {
            tableModel.addColumn(resultSet.getMetaData().getColumnName(i));
            taleptbl.setRowHeight(0,50);
        }
        while (resultSet.next()) {
            Object[] row = new Object[resultSet.getMetaData().getColumnCount()];
            for (int i = 1; i <= resultSet.getMetaData().getColumnCount(); i++) {
                row[i - 1] = resultSet.getObject(i);
            }
            tableModel.addRow(row);
            taleptbl.setRowHeight(0,50);
        }
        
        for (int i = 0; i <= 500; i++) {
            taleptbl.setRowHeight(i,50);
        }
        
        
        
        taleptbl.getColumnModel().getColumn(0).setPreferredWidth(150);
        taleptbl.getColumnModel().getColumn(1).setPreferredWidth(100);
        taleptbl.getColumnModel().getColumn(2).setPreferredWidth(100);
        taleptbl.getColumnModel().getColumn(3).setPreferredWidth(400);
        taleptbl.getColumnModel().getColumn(4).setPreferredWidth(50);
        taleptbl.getColumnModel().getColumn(5).setPreferredWidth(90);
        taleptbl.getColumnModel().getColumn(6).setPreferredWidth(100);
        
        
        Font customFont = new Font("Arial", Font.BOLD, 14);
        taleptbl.setFont(customFont);
        
        con.close();
        
    }
    
    public void alinanderslerlistele() throws SQLException {
    
        try {
            
            con = DriverManager.getConnection(url,user,pw);
            st= con.createStatement();
            int donem = donemcombo.getSelectedIndex()+1;
            String sql = "SELECT d.derskodu, d.dersad, d.tur, d.akts, a.not FROM dersler d, ogrencininaldigidersler a where d.derskodu = a.derskodu and a.ogrencino ='" + girissayfasi.ogrencino + "' and d.donem = '" + donem + "'";
            ResultSet resultSet = st.executeQuery(sql);
            
            DefaultTableModel tableModel = new DefaultTableModel();
            alinanderslertbl.setModel(tableModel);
            
            for (int i = 1; i <= resultSet.getMetaData().getColumnCount(); i++) {
                tableModel.addColumn(resultSet.getMetaData().getColumnName(i));
                
            }
            while (resultSet.next()) {
                Object[] row = new Object[resultSet.getMetaData().getColumnCount()];
                for (int i = 1; i <= resultSet.getMetaData().getColumnCount(); i++) {
                    row[i - 1] = resultSet.getObject(i);
                }
                tableModel.addRow(row);
                
            }
            
            for (int i = 0; i <= 500; i++) {
                alinanderslertbl.setRowHeight(i,50);
            }
            
            
            alinanderslertbl.getColumnModel().getColumn(0).setPreferredWidth(50);
            alinanderslertbl.getColumnModel().getColumn(1).setPreferredWidth(500);
            alinanderslertbl.getColumnModel().getColumn(2).setPreferredWidth(50);
            alinanderslertbl.getColumnModel().getColumn(3).setPreferredWidth(50);
            alinanderslertbl.getColumnModel().getColumn(4).setPreferredWidth(50);
            
            
            
            
            
            
            
            Font customFont = new Font("Arial", Font.BOLD, 14);
            alinanderslertbl.setFont(customFont);
            
            con.close();
            
        } catch (SQLException ex) {
            Logger.getLogger(ogrencisayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    
    public String filtrelerecursive(int sayac, String sql, String[] alanlar, int sefer) {
    
        if (sefer == 0 && sayac!=0) {
            sql = sql + " and (";
            sefer = 1;
        }
        else if (sefer == 1 && sayac!=0){
            sql = sql + " or ";
        }
        
        
        
        if (sayac!=0) {
            sql = sql + " al.alanad = '" + alanlar[alanlar.length-sayac] + "' ";
            sayac--;
            
            return filtrelerecursive(sayac, sql, alanlar, sefer);
        }
        
        
        return sql;
    }
    
    public void onaylananderslerlistele() {
    
        try {
            
            con = DriverManager.getConnection(url,user,pw);
            st= con.createStatement();
            int donem = donemcombo.getSelectedIndex()+1;
            String sql = "SELECT d.derskodu, d.dersad, d.tur, d.akts, h.ad, h.soyad FROM dersler d, onaylanandersler o, hoca h where d.derskodu = o.derskodu and h.sicilno = o.hocasicilno and o.ogrencino ='" + girissayfasi.ogrencino + "'";
            ResultSet resultSet = st.executeQuery(sql);
            
            DefaultTableModel tableModel = new DefaultTableModel();
            onaylananderslertbl.setModel(tableModel);
            
            for (int i = 1; i <= resultSet.getMetaData().getColumnCount(); i++) {
                tableModel.addColumn(resultSet.getMetaData().getColumnName(i));
                
            }
            while (resultSet.next()) {
                Object[] row = new Object[resultSet.getMetaData().getColumnCount()];
                for (int i = 1; i <= resultSet.getMetaData().getColumnCount(); i++) {
                    row[i - 1] = resultSet.getObject(i);
                }
                tableModel.addRow(row);
                
            }
            
            for (int i = 0; i <= 500; i++) {
                onaylananderslertbl.setRowHeight(i,50);
            }
            
            
            onaylananderslertbl.getColumnModel().getColumn(0).setPreferredWidth(50);
            onaylananderslertbl.getColumnModel().getColumn(1).setPreferredWidth(500);
            onaylananderslertbl.getColumnModel().getColumn(2).setPreferredWidth(50);
            onaylananderslertbl.getColumnModel().getColumn(3).setPreferredWidth(50);
            onaylananderslertbl.getColumnModel().getColumn(4).setPreferredWidth(50);
            
            
            
            
            
            
            
            Font customFont = new Font("Arial", Font.BOLD, 14);
            onaylananderslertbl.setFont(customFont);
            
            con.close();
            
        } catch (SQLException ex) {
            Logger.getLogger(ogrencisayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    
    public void gelentaleplistele() throws SQLException {
    
        con = DriverManager.getConnection(url,user,pw);
        st= con.createStatement();
        String sql = "SELECT d.derskodu, d.dersad, d.akts, d.tur, h.ad, h.soyad FROM dersler d, talepler t, hoca h where t.derskodu = d.derskodu and t.hocasicilno = h.sicilno and t.yon = true and t.ogrencino ='" + giris.ogrencino + "'";
        ResultSet resultSet = st.executeQuery(sql);
        System.out.println(sql);

        DefaultTableModel tableModel = new DefaultTableModel();
        gelentaleptbl.setModel(tableModel);
        
        for (int i = 1; i <= resultSet.getMetaData().getColumnCount(); i++) {
            tableModel.addColumn(resultSet.getMetaData().getColumnName(i));
            gelentaleptbl.setRowHeight(0,50);
        }
        while (resultSet.next()) {
            Object[] row = new Object[resultSet.getMetaData().getColumnCount()];
            for (int i = 1; i <= resultSet.getMetaData().getColumnCount(); i++) {
                row[i - 1] = resultSet.getObject(i);
            }
            tableModel.addRow(row);
            
        }
        
        for (int i = 0; i <= 500; i++) {
            gelentaleptbl.setRowHeight(i,50);
        }
        
        
        gelentaleptbl.getColumnModel().getColumn(0).setPreferredWidth(50);
        gelentaleptbl.getColumnModel().getColumn(1).setPreferredWidth(700);
        gelentaleptbl.getColumnModel().getColumn(2).setPreferredWidth(50);
        gelentaleptbl.getColumnModel().getColumn(3).setPreferredWidth(50);
        gelentaleptbl.getColumnModel().getColumn(3).setPreferredWidth(100);
        gelentaleptbl.getColumnModel().getColumn(3).setPreferredWidth(100);

        
        
        
        Font customFont = new Font("Arial", Font.BOLD, 14);
        gelentaleptbl.setFont(customFont);
        
        con.close();
    
    }
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ogrencisayfasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ogrencisayfasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ogrencisayfasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ogrencisayfasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ogrencisayfasi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable alinanderslertbl;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel dersadtf;
    private javax.swing.JLabel dersadtf2;
    private javax.swing.JLabel dersaktstf;
    private javax.swing.JLabel dersaktstf2;
    private javax.swing.JLabel derskodtf;
    private javax.swing.JLabel derskodtf2;
    private javax.swing.JTable derssecimtbl;
    private javax.swing.JButton derssilbtn;
    private javax.swing.JLabel dersturtf;
    private javax.swing.JLabel dersturtf2;
    private javax.swing.JComboBox<String> donemcombo;
    private javax.swing.JButton eklebtn;
    private javax.swing.JButton filtrelebtn;
    private javax.swing.JTable gelentaleptbl;
    private javax.swing.JLabel hocaadtf2;
    private javax.swing.JComboBox<String> hocacombo;
    private javax.swing.JLabel hocasoyadtf2;
    private javax.swing.JList<String> ilgialanilist;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTextArea mesajta;
    private javax.swing.JTable onaylananderslertbl;
    private javax.swing.JButton taleponaylabtn;
    private javax.swing.JTable taleptbl;
    // End of variables declaration//GEN-END:variables
}
